{"ast":null,"code":"var _jsxFileName = \"/home/eiramsg/organiser-app/src/components/NavBarComponents/NavBar.js\";\nimport React from 'react';\nimport { Drawer, AppBar, Toolbar } from '@material-ui/core';\nimport { makeStyles, Typography } from '@material-ui/core';\nimport { List, ListItem, ListItemIcon, ListItemText } from '@material-ui/core';\nimport { NavBarItems } from './NavBarItems';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst drawerWidth = \"250px\";\nexport const styles = makeStyles(theme => ({\n  page: {\n    background: \"light grey\",\n    width: \"100%\"\n  },\n  drawer: {\n    width: drawerWidth\n  },\n  paper: {\n    width: drawerWidth\n  },\n  root: {\n    display: \"flex\"\n  },\n  icons: {\n    flex: \"30%\",\n    display: \"grid\",\n    placeItems: \"center\"\n  },\n  titles: {\n    flex: \"70%\",\n    fontFamily: \"Noto Sans, sans-serif\"\n  },\n  logo: {\n    paddingLeft: \"40px\",\n    paddingTop: \"10px\"\n  },\n  toolbar: theme.mixins.toolbar,\n  content: {\n    flexGrow: \"1\",\n    backgroundColor: \"theme.palette.background.default\",\n    padding: \"theme.spacing(3)\"\n  },\n  appBar: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth\n  }\n}));\n\nfunction NavBar() {\n  const classes = styles();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"fixed\",\n      className: classes.appBar,\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        colour: \"secondary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n      className: classes.drawer,\n      variant: \"permanent\",\n      anchor: \"left\",\n      classes: {\n        paper: classes.paper\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.logo,\n          variant: \"h4\",\n          children: \"App Logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.toolbar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: NavBarItems.map((val, key) => /*#__PURE__*/_jsxDEV(ListItem, {\n          button: true,\n          children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n            className: classes.icons,\n            children: val.icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            className: classes.titles,\n            primary: val.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 29\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n\n_c = NavBar;\nexport default NavBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"sources":["/home/eiramsg/organiser-app/src/components/NavBarComponents/NavBar.js"],"names":["React","Drawer","AppBar","Toolbar","makeStyles","Typography","List","ListItem","ListItemIcon","ListItemText","NavBarItems","drawerWidth","styles","theme","page","background","width","drawer","paper","root","display","icons","flex","placeItems","titles","fontFamily","logo","paddingLeft","paddingTop","toolbar","mixins","content","flexGrow","backgroundColor","padding","appBar","marginLeft","NavBar","classes","map","val","key","icon","title"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Drawer, AppBar, Toolbar} from '@material-ui/core';\nimport {makeStyles, Typography } from '@material-ui/core';\nimport {List, ListItem, ListItemIcon, ListItemText} from '@material-ui/core';\nimport {NavBarItems} from './NavBarItems';\n\nconst drawerWidth = \"250px\"\n\nexport const styles = makeStyles((theme) => ({\n    page: {\n        background: \"light grey\",\n        width: \"100%\"\n    },\n\n    drawer: {\n        width: drawerWidth,\n    },\n\n    paper: {\n        width: drawerWidth\n    },\n\n    root: {\n        display:\"flex\"\n    },\n\n    icons:{\n        flex: \"30%\",\n        display: \"grid\",\n        placeItems: \"center\",\n    },\n\n    titles:{\n        flex: \"70%\",\n        fontFamily: \"Noto Sans, sans-serif\"\n    },\n\n    logo:{\n        paddingLeft: \"40px\",\n        paddingTop: \"10px\"\n\n    },\n\n    toolbar: theme.mixins.toolbar,\n\n    content: {\n        flexGrow: \"1\",\n        backgroundColor: \"theme.palette.background.default\",\n        padding: \"theme.spacing(3)\",\n    },\n\n    appBar: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n    }\n}))\n\nfunction NavBar() {\n    const classes = styles();\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"fixed\" className={classes.appBar}>\n                <Toolbar colour=\"secondary\">\n\n                </Toolbar>\n            </AppBar>\n            \n            <Drawer\n            className={classes.drawer}\n            variant=\"permanent\"\n            anchor='left'\n            classes={{paper: classes.paper}}\n            >\n                <div>                \n                    <Typography className={classes.logo} variant='h4'>\n                    App Logo\n                    </Typography>\n                </div>\n                <div className={classes.toolbar}/>\n                <List >\n                {NavBarItems.map((val, key) => (\n                        <ListItem button key={key}>\n                            <ListItemIcon className={classes.icons}>{val.icon}</ListItemIcon>\n                            <ListItemText className={classes.titles} primary={val.title}/>\n                        </ListItem>\n                    ))}\n\n                </List>\n\n            </Drawer>\n        </div>\n    )\n}\n\nexport default NavBar\n"]},"metadata":{},"sourceType":"module"}