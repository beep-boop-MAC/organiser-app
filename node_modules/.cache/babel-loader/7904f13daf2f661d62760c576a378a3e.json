{"ast":null,"code":"var _jsxFileName = \"/home/eiramsg/organiser-app/src/components/CreateReminder.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { TextField, Typography, makeStyles, Button, Container } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst reminderStyle = makeStyles({\n  textfield1: {\n    marginTop: \"5px\",\n    width: \"40%\"\n  },\n  textfield2: {\n    marginTop: \"5px\"\n  },\n  button: {\n    background: \"primary\",\n    marginTop: \"4px\"\n  }\n});\n\nfunction CreateReminder() {\n  _s();\n\n  const classes = reminderStyle();\n  const [allReminder, setAllReminder] = useState([]);\n  const [reminder, setReminder] = useState({\n    title: null,\n    due: null,\n    completed: false\n  });\n  let count = allReminder.length;\n\n  const addReminder = reminder => {\n    setAllReminder([...allReminder, reminder]);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    addReminder({ ...reminder,\n      id: count++\n    });\n  };\n\n  const handleChangeReminder = e => {\n    setReminder({ ...reminder,\n      title: e.target.value\n    });\n  };\n\n  const handleChangeDate = e => {\n    setReminder({ ...reminder,\n      due: e.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      children: \"Creat a reminder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      noValidate: true,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Reminder\",\n        variant: \"outlined\",\n        className: classes.textfield1,\n        required: true,\n        onChange: handleChangeReminder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        className: classes.textfield2,\n        label: \"Due\",\n        variant: \"outlined\",\n        required: true,\n        onChange: handleChangeDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onSubmit: handleSubmit,\n      type: \"submit\",\n      disableElevation: true,\n      variant: \"contained\",\n      className: classes.button,\n      color: \"secondary\",\n      children: \"Add Reminder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreateReminder, \"5dED8GksxrbG+TMUoDCNuUlGIGs=\");\n\n_c = CreateReminder;\nexport default CreateReminder;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateReminder\");","map":{"version":3,"sources":["/home/eiramsg/organiser-app/src/components/CreateReminder.js"],"names":["React","useState","TextField","Typography","makeStyles","Button","Container","reminderStyle","textfield1","marginTop","width","textfield2","button","background","CreateReminder","classes","allReminder","setAllReminder","reminder","setReminder","title","due","completed","count","length","addReminder","handleSubmit","e","preventDefault","id","handleChangeReminder","target","value","handleChangeDate"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SACEC,SADF,EAEEC,UAFF,EAGEC,UAHF,EAIEC,MAJF,EAKEC,SALF,QAMO,mBANP;;AAQA,MAAMC,aAAa,GAAGH,UAAU,CAAC;AAC/BI,EAAAA,UAAU,EAAE;AACVC,IAAAA,SAAS,EAAE,KADD;AAEVC,IAAAA,KAAK,EAAE;AAFG,GADmB;AAM/BC,EAAAA,UAAU,EAAE;AACVF,IAAAA,SAAS,EAAE;AADD,GANmB;AAU/BG,EAAAA,MAAM,EAAE;AACNC,IAAAA,UAAU,EAAE,SADN;AAENJ,IAAAA,SAAS,EAAE;AAFL;AAVuB,CAAD,CAAhC;;AAiBA,SAASK,cAAT,GAA0B;AAAA;;AACxB,QAAMC,OAAO,GAAGR,aAAa,EAA7B;AAEA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgChB,QAAQ,CAAC,EAAD,CAA9C;AAEA,QAAM,CAACiB,QAAD,EAAWC,WAAX,IAA0BlB,QAAQ,CAAC;AACvCmB,IAAAA,KAAK,EAAE,IADgC;AAEvCC,IAAAA,GAAG,EAAE,IAFkC;AAGvCC,IAAAA,SAAS,EAAE;AAH4B,GAAD,CAAxC;AAMA,MAAIC,KAAK,GAAGP,WAAW,CAACQ,MAAxB;;AAEA,QAAMC,WAAW,GAAIP,QAAD,IAAc;AAChCD,IAAAA,cAAc,CAAC,CAAC,GAAGD,WAAJ,EAAiBE,QAAjB,CAAD,CAAd;AACD,GAFD;;AAIA,QAAMQ,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AACAH,IAAAA,WAAW,CAAC,EACV,GAAGP,QADO;AAEVW,MAAAA,EAAE,EAAEN,KAAK;AAFC,KAAD,CAAX;AAID,GAND;;AAQA,QAAMO,oBAAoB,GAAIH,CAAD,IAAO;AAClCR,IAAAA,WAAW,CAAC,EACV,GAAGD,QADO;AAEVE,MAAAA,KAAK,EAAEO,CAAC,CAACI,MAAF,CAASC;AAFN,KAAD,CAAX;AAID,GALD;;AAOA,QAAMC,gBAAgB,GAAIN,CAAD,IAAO;AAC9BR,IAAAA,WAAW,CAAC,EACV,GAAGD,QADO;AAEVG,MAAAA,GAAG,EAAEM,CAAC,CAACI,MAAF,CAASC;AAFJ,KAAD,CAAX;AAID,GALD;;AAOA,sBACE,QAAC,SAAD;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAM,MAAA,UAAU,MAAhB;AAAA,8BACE,QAAC,SAAD;AACE,QAAA,KAAK,EAAC,UADR;AAEE,QAAA,OAAO,EAAC,UAFV;AAGE,QAAA,SAAS,EAAEjB,OAAO,CAACP,UAHrB;AAIE,QAAA,QAAQ,MAJV;AAKE,QAAA,QAAQ,EAAEsB;AALZ;AAAA;AAAA;AAAA;AAAA,cADF,eASE,QAAC,SAAD;AACE,QAAA,SAAS,EAAEf,OAAO,CAACJ,UADrB;AAEE,QAAA,KAAK,EAAC,KAFR;AAGE,QAAA,OAAO,EAAC,UAHV;AAIE,QAAA,QAAQ,MAJV;AAKE,QAAA,QAAQ,EAAEsB;AALZ;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAqBE,QAAC,MAAD;AACE,MAAA,QAAQ,EAAEP,YADZ;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,gBAAgB,MAHlB;AAIE,MAAA,OAAO,EAAC,WAJV;AAKE,MAAA,SAAS,EAAEX,OAAO,CAACH,MALrB;AAME,MAAA,KAAK,EAAC,WANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YArBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkCD;;GAzEQE,c;;KAAAA,c;AA2ET,eAAeA,cAAf","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  TextField,\n  Typography,\n  makeStyles,\n  Button,\n  Container,\n} from \"@material-ui/core\";\n\nconst reminderStyle = makeStyles({\n  textfield1: {\n    marginTop: \"5px\",\n    width: \"40%\",\n  },\n\n  textfield2: {\n    marginTop: \"5px\",\n  },\n\n  button: {\n    background: \"primary\",\n    marginTop: \"4px\",\n  },\n});\n\n\nfunction CreateReminder() {\n  const classes = reminderStyle();\n\n  const [allReminder, setAllReminder] = useState([]);\n\n  const [reminder, setReminder] = useState({\n    title: null,\n    due: null,\n    completed: false,\n  });\n\n  let count = allReminder.length;\n\n  const addReminder = (reminder) => {\n    setAllReminder([...allReminder, reminder]);\n  };\n  \n  const handleSubmit = (e) => {\n    e.preventDefault();\n    addReminder({\n      ...reminder,\n      id: count++,\n    });\n  };\n  \n  const handleChangeReminder = (e) => {\n    setReminder({\n      ...reminder,\n      title: e.target.value,\n    });\n  };\n  \n  const handleChangeDate = (e) => {\n    setReminder({\n      ...reminder,\n      due: e.target.value,\n    });\n  };\n\n  return (\n    <Container>\n      <Typography variant=\"h5\">Creat a reminder</Typography>\n\n      <form noValidate>\n        <TextField\n          label=\"Reminder\"\n          variant=\"outlined\"\n          className={classes.textfield1}\n          required\n          onChange={handleChangeReminder}\n        />\n\n        <TextField\n          className={classes.textfield2}\n          label=\"Due\"\n          variant=\"outlined\"\n          required\n          onChange={handleChangeDate}\n        />\n      </form>\n\n      <Button\n        onSubmit={handleSubmit}\n        type=\"submit\"\n        disableElevation\n        variant=\"contained\"\n        className={classes.button}\n        color=\"secondary\"\n      >\n        Add Reminder\n      </Button>\n    </Container>\n  );\n}\n\nexport default CreateReminder;\n"]},"metadata":{},"sourceType":"module"}