[{"/mnt/c/Users/sheku/WebstormProjects/organiser-app/src/index.js":"1","/mnt/c/Users/sheku/WebstormProjects/organiser-app/src/reportWebVitals.js":"2","/mnt/c/Users/sheku/WebstormProjects/organiser-app/src/App.js":"3","/mnt/c/Users/sheku/WebstormProjects/organiser-app/src/pages/RemindersPage.js":"4","/mnt/c/Users/sheku/WebstormProjects/organiser-app/src/pages/TimerPage.js":"5","/mnt/c/Users/sheku/WebstormProjects/organiser-app/src/pages/Homepage.js":"6","/mnt/c/Users/sheku/WebstormProjects/organiser-app/src/pages/UnitsPage.js":"7","/mnt/c/Users/sheku/WebstormProjects/organiser-app/src/components/Layout/Layout.js":"8","/mnt/c/Users/sheku/WebstormProjects/organiser-app/src/components/Timer/Pomodoro.js":"9","/mnt/c/Users/sheku/WebstormProjects/organiser-app/src/components/Units/UnitCard.js":"10","/mnt/c/Users/sheku/WebstormProjects/organiser-app/src/components/Reminders/CreateReminder.js":"11","/mnt/c/Users/sheku/WebstormProjects/organiser-app/src/components/NavBarComponents/NavBar.js":"12","/mnt/c/Users/sheku/WebstormProjects/organiser-app/src/components/NavBarComponents/NavBarItems.js":"13","/mnt/c/Users/sheku/WebstormProjects/organiser-app/src/components/Reminders/ReminderCard.js":"14","/mnt/c/Users/sheku/WebstormProjects/organiser-app/src/components/Units/CreateUnit.js":"15"},{"size":500,"mtime":1626254934785,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1626254934831,"results":"18","hashOfConfig":"17"},{"size":1827,"mtime":1626262330704,"results":"19","hashOfConfig":"17"},{"size":649,"mtime":1626258236797,"results":"20","hashOfConfig":"17"},{"size":395,"mtime":1626254934816,"results":"21","hashOfConfig":"17"},{"size":1888,"mtime":1626262426969,"results":"22","hashOfConfig":"17"},{"size":847,"mtime":1626262562395,"results":"23","hashOfConfig":"17"},{"size":814,"mtime":1626254934713,"results":"24","hashOfConfig":"17"},{"size":2625,"mtime":1626254934750,"results":"25","hashOfConfig":"17"},{"size":1039,"mtime":1626262562393,"results":"26","hashOfConfig":"17"},{"size":2910,"mtime":1626259181726,"results":"27","hashOfConfig":"17"},{"size":1964,"mtime":1626254934721,"results":"28","hashOfConfig":"17"},{"size":675,"mtime":1626254934729,"results":"29","hashOfConfig":"17"},{"size":476,"mtime":1626259441139,"results":"30","hashOfConfig":"17"},{"size":2881,"mtime":1626262030059,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"shlvy4",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"41"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"41"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"41"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"41"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/mnt/c/Users/sheku/WebstormProjects/organiser-app/src/index.js",[],"/mnt/c/Users/sheku/WebstormProjects/organiser-app/src/reportWebVitals.js",[],"/mnt/c/Users/sheku/WebstormProjects/organiser-app/src/App.js",["68"],"/mnt/c/Users/sheku/WebstormProjects/organiser-app/src/pages/RemindersPage.js",["69"],"import React from \"react\";\nimport CreateReminder from \"../components/Reminders/CreateReminder\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Typography } from \"@material-ui/core\";\n\nfunction RemindersPage({onSubmitFunc, allReminders, setAllReminders, onChecked}) {\n\n  return (\n    <div>\n      <Typography variant=\"h3\" align=\"center\">\n        Reminders\n      </Typography>\n      <div align=\"center\" style={{ justifyContent: \"center\" }}>\n        <CreateReminder onChecked={onChecked} onSubmitFunc={onSubmitFunc} allReminders={allReminders} setAllReminders={setAllReminders}/>\n      </div>\n    </div>\n  );\n}\n\nexport default RemindersPage;\n",["70","71"],"/mnt/c/Users/sheku/WebstormProjects/organiser-app/src/pages/TimerPage.js",[],"/mnt/c/Users/sheku/WebstormProjects/organiser-app/src/pages/Homepage.js",[],"/mnt/c/Users/sheku/WebstormProjects/organiser-app/src/pages/UnitsPage.js",[],"/mnt/c/Users/sheku/WebstormProjects/organiser-app/src/components/Layout/Layout.js",[],"/mnt/c/Users/sheku/WebstormProjects/organiser-app/src/components/Timer/Pomodoro.js",["72","73"],"import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Box, Button, ButtonGroup } from '@material-ui/core';\n\nconst style = makeStyles({    \n\n    box:{\n        borderColor:\"#189AB4\",\n        borderRadius: \"10px\",\n        padding: \"1rem\",\n        borderBlockEndWidth: \"6px\",\n        borderBlockStartWidth: \"6px\",\n        borderInlineEndWidth: \"6px\",\n        borderInlineStartWidth: \"6px\",\n        height: \"100%\",\n        width: \"200px\",\n        fontSize: \"80px\",\n        marginTop: \"25%\",\n\n    },\n\n\n    button: {\n        position: 'sticky', \n        width: \"220px\",\n        padding: \"2rem\"\n        \n    }\n})\n\nfunction Pomodoro() {\n    const classes = style()\n\n    const [minute, setMinute] = useState(25);\n    const [second, setSecond] = useState(0);\n    const [timeVar, setTimeVar] = useState(false);\n    const [on, setOn] = useState(false)\n\n    useEffect(() => {\n\n        if (on) {\n            let interval = setInterval(() => {\n                clearInterval(interval);\n\n                if (second === 0 && minute !== 0){\n                    setSecond(59);\n                    setMinute(minute - 1);\n                } else if (second === 0 && minute === 0){\n\n                    let minute = timeVar ? 24 : 4;\n                    let second = 59;\n\n                    setSecond(second);\n                    setMinute(minute);\n                    setTimeVar(!timeVar);\n                } else {\n                    setSecond(second - 1);\n                }\n\n            }, 1000)\n        } \n        \n        }, [on,second]);\n\n    const timerMinute = minute < 10 ? `0${minute}` : minute;\n    const timerSecond = second < 10 ? `0${second}` : second;\n\n    // const setTimerMinute = (time) => {\n    //     const timerMinute = minute < 10 ? `0${minute}` : minute;\n    //     setMinute(timerMinute);\n    // }\n    \n    // const setTimerSecond = (time) => {\n    //     const timerSecond = second < 10 ? `0${second}` : second;\n    //     setSecond(timerSecond);\n    // }\n\n    const restart = () => {\n        setMinute(25);\n        setSecond(0);\n    }\n\n    return (\n        <div>\n            <Box border={1} \n            className=\"timer\" \n            className={classes.box}\n            >\n                {timerMinute}:{timerSecond}\n            </Box>\n\n            <ButtonGroup disableElevation variant=\"contained\" color=\"secondary\" size=\"large\" className={classes.button}>\n                <Button onClick={() => setOn(true)}>Start</Button>\n                <Button onClick={() => restart()}>Restart</Button>\n            </ButtonGroup>\n        </div>\n    )\n}\n\nexport default Pomodoro","/mnt/c/Users/sheku/WebstormProjects/organiser-app/src/components/Units/UnitCard.js",["74"],"/mnt/c/Users/sheku/WebstormProjects/organiser-app/src/components/Reminders/CreateReminder.js",["75","76"],"import React, { useState } from \"react\";\nimport {\n  TextField,\n  Button,\n  makeStyles,\n  FormGroup,\n  Checkbox,\n  Typography,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Grid,\n} from \"@material-ui/core\";\n\nconst reminderStyle = makeStyles({\n  textfield1: {\n    width: \"50%\",\n    position: \"sticky\",\n    padding: \"0.7rem\",\n  },\n\n  textfield2: {\n    width: \"200px\",\n    position: \"sticky\",\n    padding: \"0.7rem\",\n  },\n\n  form: {\n    position: \"sticky\",\n  },\n\n  button: {\n    marginLeft : \"13px\"\n  }\n});\n\nfunction CreateReminder({onSubmitFunc, allReminders, onChecked}) {\n  const classes = reminderStyle();\n  // const [allReminders, setAllReminders] = useState([]);\n  const [reminders, setReminders] = useState({\n    id: 0,\n    title: null,\n    due: null,\n    completed: false,\n  });\n\n  const [date, setDate] = useState(\"\");\n  let count = allReminders.length;\n\n  // const addSingleReminder = (reminders) => {\n  //   setAllReminders([...allReminders, reminders]);\n  // };\n\n\n  return (\n    <div>\n      <FormGroup className={classes.form}>\n        <Grid container>\n          <TextField\n            label=\"Reminder\"\n            id=\"margin-none\"\n            variant=\"outlined\"\n            className={classes.textfield1}\n            multiline\n            required\n            onChange={(e) =>\n              setReminders({\n                ...reminders,\n                title: e.target.value,\n              })\n            }\n          />\n          <TextField\n            type=\"date\"\n            className={classes.textfield2}\n            variant=\"outlined\"\n            required\n            onChange={(e) =>\n              setReminders({\n                ...reminders,\n                due:e.target.value\n              })\n            }\n          />\n        </Grid>\n        <Grid container>\n          <Button\n            type=\"submit\"\n            disableElevation\n            variant=\"contained\"\n            className={classes.button}\n            color=\"secondary\"\n            onClick={(e) => {\n              e.preventDefault();\n              onSubmitFunc({\n                ...reminders,\n                id: count++\n              })\n\n            }}\n          >\n            Add Reminder\n          </Button>\n        </Grid>\n      </FormGroup>\n      {allReminders.length > 0 ? (\n        allReminders.map((reminders) => (\n          <List key={reminders.id}>\n            <ListItem>\n              <ListItemIcon>\n                <Checkbox\n                  id={reminders.id}\n                  checked={reminders.completed}\n                  name={reminders.id}\n                  onChange={() => onChecked(reminders.id)}\n                />\n              </ListItemIcon>\n              <ListItemText primary={reminders.title} secondary={reminders.due}/>\n            </ListItem>\n          </List>\n        ))\n      ) : (\n        <Typography>No Reminders Yet</Typography>\n      )}\n    </div>\n  );\n}\n\nexport default CreateReminder;\n","/mnt/c/Users/sheku/WebstormProjects/organiser-app/src/components/NavBarComponents/NavBar.js",["77","78","79"],"import React from \"react\";\nimport { Drawer, AppBar, Toolbar, Divider } from \"@material-ui/core\";\nimport { makeStyles, Typography } from \"@material-ui/core\";\nimport { List, ListItem, ListItemIcon, ListItemText } from \"@material-ui/core\";\nimport { NavBarItems } from \"./NavBarItems\";\nimport logo from \"./logo.png\";\nimport { useHistory } from \"react-router-dom\";\n\nconst drawerWidth = \"230px\";\n\nexport const styles = makeStyles((theme) => ({\n  page: {\n    background: \"light grey\",\n    width: \"100%\",\n  },\n\n  drawer: {\n    width: drawerWidth,\n  },\n\n  paper: {\n    width: drawerWidth,\n  },\n\n  root: {\n    display: \"flex\",\n  },\n\n  icons: {\n    flex: \"30%\",\n    display: \"grid\",\n    placeItems: \"center\",\n  },\n\n  titles: {\n    flex: \"70%\",\n    fontFamily: \"Noto Sans, sans-serif\",\n  },\n\n  toolbar: theme.mixins.toolbar,\n\n  content: {\n    flexGrow: \"1\",\n    backgroundColor: \"theme.palette.background.default\",\n    padding: \"theme.spacing(3)\",\n  },\n\n  logo: {\n    width: \"60%\",\n  },\n}));\n\nfunction NavBar() {\n  const classes = styles();\n  const history = useHistory();\n\n  return (\n    <div className={classes.root}>\n      <AppBar>\n        <Toolbar colour=\"secondary\"></Toolbar>\n      </AppBar>\n\n      <Drawer\n        className={classes.drawer}\n        variant=\"permanent\"\n        anchor=\"left\"\n        classes={{ paper: classes.paper }}\n      >\n        <div style={{ height: \"60px\" }} align=\"center\">\n          <img src={logo} className={classes.logo} />\n        </div>\n        <div className={classes.toolbar} />\n        <List>\n          {NavBarItems.map((val, key) => (\n            <ListItem \n            button \n            key={key}\n            onClick={() => history.push(val.path)}\n            >\n              <ListItemIcon className={classes.icons}>{val.icon}</ListItemIcon>\n              <ListItemText className={classes.titles} primary={val.title} />\n            </ListItem>\n          ))}\n        </List>\n      </Drawer>\n    </div>\n  );\n}\n\nexport default NavBar;\n","/mnt/c/Users/sheku/WebstormProjects/organiser-app/src/components/NavBarComponents/NavBarItems.js",["80"],"import { CalendarToday, ClassRounded, HomeRounded, ListRounded, TimerRounded,  } from '@material-ui/icons';\nimport React from 'react';\n\n\nexport const NavBarItems =[\n    {\n        title: \"Home\",\n        icon: <HomeRounded color=\"primary\" fontSize=\"large\" />,\n        path: '/'\n    },\n\n    {\n        title: \"Units\",\n        icon: <ClassRounded color=\"primary\" fontSize=\"large\" />,\n        path: '/units'\n    },\n\n    {\n        title: \"Reminders\",\n        icon: <ListRounded color=\"primary\" fontSize=\"large\"/>,\n        path: '/reminders'\n    },\n\n    {\n        title: \"Study Timer\",\n        icon: <TimerRounded color=\"primary\" fontSize=\"large\"/>,\n        path: '/timer'\n    },\n\n];","/mnt/c/Users/sheku/WebstormProjects/organiser-app/src/components/Reminders/ReminderCard.js",[],"/mnt/c/Users/sheku/WebstormProjects/organiser-app/src/components/Units/CreateUnit.js",[],{"ruleId":"81","severity":1,"message":"82","line":38,"column":62,"nodeType":"83","messageId":"84","endLine":38,"endColumn":64},{"ruleId":"85","severity":1,"message":"86","line":3,"column":10,"nodeType":"87","messageId":"88","endLine":3,"endColumn":20},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":63,"column":12,"nodeType":"95","endLine":63,"endColumn":23,"suggestions":"96"},{"ruleId":"97","severity":1,"message":"98","line":87,"column":13,"nodeType":"99","messageId":"100","endLine":87,"endColumn":36},{"ruleId":"85","severity":1,"message":"86","line":2,"column":9,"nodeType":"87","messageId":"88","endLine":2,"endColumn":19},{"ruleId":"85","severity":1,"message":"101","line":48,"column":10,"nodeType":"87","messageId":"88","endLine":48,"endColumn":14},{"ruleId":"85","severity":1,"message":"102","line":48,"column":16,"nodeType":"87","messageId":"88","endLine":48,"endColumn":23},{"ruleId":"85","severity":1,"message":"103","line":2,"column":35,"nodeType":"87","messageId":"88","endLine":2,"endColumn":42},{"ruleId":"85","severity":1,"message":"104","line":3,"column":22,"nodeType":"87","messageId":"88","endLine":3,"endColumn":32},{"ruleId":"105","severity":1,"message":"106","line":70,"column":11,"nodeType":"107","endLine":70,"endColumn":54},{"ruleId":"85","severity":1,"message":"108","line":1,"column":10,"nodeType":"87","messageId":"88","endLine":1,"endColumn":23},"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-unused-vars","'makeStyles' is defined but never used.","Identifier","unusedVar","no-native-reassign",["109"],"no-negated-in-lhs",["110"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'minute' and 'timeVar'. Either include them or remove the dependency array. You can also do a functional update 'setMinute(m => ...)' if you only need 'minute' in the 'setMinute' call.","ArrayExpression",["111"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'date' is assigned a value but never used.","'setDate' is assigned a value but never used.","'Divider' is defined but never used.","'Typography' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'CalendarToday' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"112","fix":"113"},"Update the dependencies array to be: [minute, on, second, timeVar]",{"range":"114","text":"115"},[1563,1574],"[minute, on, second, timeVar]"]