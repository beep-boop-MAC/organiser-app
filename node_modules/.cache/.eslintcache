[{"/home/eiramsg/organiser-app/src/index.js":"1","/home/eiramsg/organiser-app/src/App.js":"2","/home/eiramsg/organiser-app/src/reportWebVitals.js":"3","/home/eiramsg/organiser-app/src/components/Reminders/CreateReminder.js":"4","/home/eiramsg/organiser-app/src/pages/TimerPage.js":"5","/home/eiramsg/organiser-app/src/components/Timer/Pomodoro.js":"6","/home/eiramsg/organiser-app/src/components/NavBarComponents/NavBar.js":"7","/home/eiramsg/organiser-app/src/components/NavBarComponents/NavBarItems.js":"8","/home/eiramsg/organiser-app/src/pages/RemindersPage.js":"9","/home/eiramsg/organiser-app/src/components/Units/UnitCard.js":"10","/home/eiramsg/organiser-app/src/pages/UnitsPage.js":"11","/home/eiramsg/organiser-app/src/components/Layout/Layout.js":"12","/home/eiramsg/organiser-app/src/pages/Homepage.js":"13"},{"size":500,"mtime":1626240848510,"results":"14","hashOfConfig":"15"},{"size":1208,"mtime":1626313912570,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1626099333210,"results":"17","hashOfConfig":"15"},{"size":2973,"mtime":1626313912570,"results":"18","hashOfConfig":"15"},{"size":1364,"mtime":1626258083776,"results":"19","hashOfConfig":"15"},{"size":2660,"mtime":1626256991646,"results":"20","hashOfConfig":"15"},{"size":1964,"mtime":1626313912570,"results":"21","hashOfConfig":"15"},{"size":675,"mtime":1626313647318,"results":"22","hashOfConfig":"15"},{"size":535,"mtime":1626313912570,"results":"23","hashOfConfig":"15"},{"size":1539,"mtime":1626244739910,"results":"24","hashOfConfig":"15"},{"size":345,"mtime":1626244832630,"results":"25","hashOfConfig":"15"},{"size":814,"mtime":1626243712800,"results":"26","hashOfConfig":"15"},{"size":313,"mtime":1626244165370,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"k6n2wo",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"/home/eiramsg/organiser-app/src/index.js",[],["57","58"],"/home/eiramsg/organiser-app/src/App.js",[],"/home/eiramsg/organiser-app/src/reportWebVitals.js",[],"/home/eiramsg/organiser-app/src/components/Reminders/CreateReminder.js",["59"],"/home/eiramsg/organiser-app/src/pages/TimerPage.js",[],"/home/eiramsg/organiser-app/src/components/Timer/Pomodoro.js",["60","61"],"import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Box, Button, ButtonGroup } from '@material-ui/core';\n\nconst style = makeStyles({    \n\n    box:{\n        borderColor:\"#189AB4\",\n        borderRadius: \"10px\",\n        padding: \"1rem\",\n        borderBlockEndWidth: \"6px\",\n        borderBlockStartWidth: \"6px\",\n        borderInlineEndWidth: \"6px\",\n        borderInlineStartWidth: \"6px\",\n        height: \"100%\",\n        width: \"200px\",\n        fontSize: \"80px\",\n        marginTop: \"10%\",\n\n    },\n\n\n    button: {\n        position: 'sticky', \n        width: \"220px\",\n        padding: \"2rem\"\n        \n    }\n})\n\nfunction Pomodoro() {\n    const classes = style()\n\n    const [minute, setMinute] = useState(25);\n    const [second, setSecond] = useState(0);\n    const [timeVar, setTimeVar] = useState(false);\n    const [on, setOn] = useState(false)\n\n    useEffect(() => {\n\n        if (on) {\n            let interval = setInterval(() => {\n                clearInterval(interval);\n\n                if (second === 0 && minute !== 0){\n                    setSecond(59);\n                    setMinute(minute - 1);\n                } else if (second === 0 && minute === 0){\n\n                    let minute = timeVar ? 24 : 4;\n                    let second = 59;\n\n                    setSecond(second);\n                    setMinute(minute);\n                    setTimeVar(!timeVar);\n                } else {\n                    setSecond(second - 1);\n                }\n\n            }, 1000)\n        } \n        \n        }, [on,second]);\n\n    const timerMinute = minute < 10 ? `0${minute}` : minute;\n    const timerSecond = second < 10 ? `0${second}` : second;\n\n    // const setTimerMinute = (time) => {\n    //     const timerMinute = minute < 10 ? `0${minute}` : minute;\n    //     setMinute(timerMinute);\n    // }\n    \n    // const setTimerSecond = (time) => {\n    //     const timerSecond = second < 10 ? `0${second}` : second;\n    //     setSecond(timerSecond);\n    // }\n\n    const restart = () => {\n        setMinute(25);\n        setSecond(0);\n    }\n\n    return (\n        <div style={{justifyContent: \"center\"}}>\n            <Box border={1} \n            className=\"timer\" \n            className={classes.box}\n            >\n                {timerMinute}:{timerSecond}\n            </Box>\n\n            <ButtonGroup disableElevation variant=\"contained\" color=\"secondary\" size=\"large\" className={classes.button}>\n                <Button onClick={() => setOn(true)}>Start</Button>\n                <Button onClick={() => restart()}>Restart</Button>\n            </ButtonGroup>\n        </div>\n    )\n}\n\nexport default Pomodoro","/home/eiramsg/organiser-app/src/components/NavBarComponents/NavBar.js",["62","63","64"],"/home/eiramsg/organiser-app/src/components/NavBarComponents/NavBarItems.js",["65"],"import { CalendarToday, ClassRounded, HomeRounded, ListRounded, TimerRounded,  } from '@material-ui/icons';\nimport React from 'react';\n\n\nexport const NavBarItems =[\n    {\n        title: \"Home\",\n        icon: <HomeRounded color=\"primary\" fontSize=\"large\" />,\n        path: '/'\n    },\n\n    {\n        title: \"Units\",\n        icon: <ClassRounded color=\"primary\" fontSize=\"large\" />,\n        path: '/units'\n    },\n\n    {\n        title: \"Reminders\",\n        icon: <ListRounded color=\"primary\" fontSize=\"large\"/>,\n        path: '/reminders'\n    },\n\n    {\n        title: \"Study Timer\",\n        icon: <TimerRounded color=\"primary\" fontSize=\"large\"/>,\n        path: '/timer'\n    },\n\n];","/home/eiramsg/organiser-app/src/pages/RemindersPage.js",["66"],"/home/eiramsg/organiser-app/src/components/Units/UnitCard.js",[],"/home/eiramsg/organiser-app/src/pages/UnitsPage.js",[],"/home/eiramsg/organiser-app/src/components/Layout/Layout.js",[],"/home/eiramsg/organiser-app/src/pages/Homepage.js",[],{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":51,"column":64,"nodeType":"73","messageId":"74","endLine":51,"endColumn":66},{"ruleId":"75","severity":1,"message":"76","line":63,"column":12,"nodeType":"77","endLine":63,"endColumn":23,"suggestions":"78"},{"ruleId":"79","severity":1,"message":"80","line":87,"column":13,"nodeType":"81","messageId":"82","endLine":87,"endColumn":36},{"ruleId":"83","severity":1,"message":"84","line":2,"column":35,"nodeType":"85","messageId":"86","endLine":2,"endColumn":42},{"ruleId":"83","severity":1,"message":"87","line":3,"column":22,"nodeType":"85","messageId":"86","endLine":3,"endColumn":32},{"ruleId":"88","severity":1,"message":"89","line":70,"column":11,"nodeType":"90","endLine":70,"endColumn":54},{"ruleId":"83","severity":1,"message":"91","line":1,"column":10,"nodeType":"85","messageId":"86","endLine":1,"endColumn":23},{"ruleId":"83","severity":1,"message":"92","line":3,"column":10,"nodeType":"85","messageId":"86","endLine":3,"endColumn":20},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'minute' and 'timeVar'. Either include them or remove the dependency array. You can also do a functional update 'setMinute(m => ...)' if you only need 'minute' in the 'setMinute' call.","ArrayExpression",["95"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","no-unused-vars","'Divider' is defined but never used.","Identifier","unusedVar","'Typography' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'CalendarToday' is defined but never used.","'makeStyles' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"96","fix":"97"},"Update the dependencies array to be: [minute, on, second, timeVar]",{"range":"98","text":"99"},[1563,1574],"[minute, on, second, timeVar]"]